<?php

/**
 * Implements hook_permission().
 */
function commerce_coffee_permission() {
  $permissions = array(
    'use commercify coffee' => array(
      'title' => t('Use commercify\'s coffee commands'),
      'description' => t('Allows users to use commercify commands under Alt-d.'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_coffee_command().
 * 
 * Allows hooking into coffee and feed it with cool commands.
 */
function commerce_coffee_coffee_command($op) {
  if (user_access('use commercify coffee')) {
    switch ($op) {
      // Some less cool links...
      case 'stats':
        $return = array();
        $return[] = array(
          'path' => 'admin/commerce/products/add/publication',
          'title' => 'Statistikk: Mest solgte produkter'
        );
        break;
      case 'kar':
      case 'kart':
        $minus_7_days = format_date(strtotime('now -7 days'), 'custom', 'd-m-Y');
        $minus_31_days = format_date(strtotime('now -31 days'), 'custom', 'd-m-Y');


        $return = array();
        $return[] = array(
          'path' => 'admin/commerce/overview/ip-map?created=' . $minus_7_days,
          'title' => 'Kart over kjÃ¸pere -> Siste 7 dager'
        );
        $return[] = array(
          'path' => 'admin/commerce/overview/ip-map?created=' . $minus_31_days,
          'title' => 'Kart over kjÃ¸pere -> Siste 31 dager'
        );

        break;
      case 'eksp':
      case 'ekspo':
      case 'ekspor':
      case 'eksport':
        $return[] = array(
          'path' => 'admin/commerce/overview/orders/export/7days/csv',
          'title' => 'Ordre siste 7 dager (komplette)'
        );
        break;
      case 'kupo':
      case 'kupon':
      case 'kupong':

        $return[] = array(
          'path' => 'admin/commerce/coupons/add',
          'title' => 'Kupong: Lag en ny'
        );
        $return[] = array(
          'path' => 'admin/commerce/overview/coupons',
          'title' => 'Kupong: Vis oversikt'
        );
        $return[] = array(
          'path' => 'admin/commerce/overview/coupons',
          'title' => 'Kupong: I bruk siste 7 dager'
        );
        break;
      case 'kun':
      case 'kund':
      case 'kunde':

        $return[] = array(
          'path' => 'admin/commerce/coupons/add',
          'title' => 'Kunde: Vis kundeliste'
        );
        $return[] = array(
          'path' => 'admin/commerce/overview/coupons',
          'title' => 'Kunde: Registrert siste 7 dager'
        );
        break;
    }

    // Users & orders owned
    if (strpos($op, 'u-') === 0) {
      $return = array();
      //xdebug_break();
      // Remove the first letter
      $email = substr($op, 2);
      if (!empty($email)) {
        if ($s_user = user_load_by_mail($email) or $s_user = user_load_by_name($email)) {
          $return[] = array(
            'path' => 'user/' . $s_user->uid,
            'title' => $s_user->name . " -> Brukerinnstillinger",
          );

          // Let's see if we can get the latest order...
          $query = new EntityFieldQuery();

          $query
              ->entityCondition('entity_type', 'commerce_order', '=')
              ->entityOrderBy('entity_id', 'DESC')
              ->range(0, 1)
              ->propertyCondition('uid', $s_user->uid, '=');
          $result = $query->execute();
          foreach ($result['commerce_order'] as $order_id => $order) {
            $order = commerce_order_load($order_id);
            $return[] = array(
              'path' => 'admin/commerce/orders/' . $order_id,
              'title' => "Vis ordre " . $order_id . " datert " . format_date($order->created, 'custom', 'd-m-Y'),
            );
          }
        }
      }
    }

    if (strpos($op, 'sku-') === 0) {
      $return = array();
      //xdebug_break();
      // Remove the first letter
      $sku = substr($op, 4);
      if (!empty($sku)) {
        if ($product = commerce_product_load_by_sku($sku)) {
          $return[] = array(
            'path' => 'admin/commerce/products/' . $product->product_id,
            'title' => "Produkt: " . $product->title,
          );
        }
      };
    }

    // Order IDs
    if (strpos($op, 'o-') === 0) {
      $return = array();
      $order_id = substr($op, 2);
      if (is_numeric($order_id)) {

        // Let's see if we can get the latest order...
        $query = new EntityFieldQuery();

        $query
            ->entityCondition('entity_type', 'commerce_order', '=')
            ->entityOrderBy('entity_id', 'DESC')
            ->range(0, 1)
            ->propertyCondition('order_id', $order_id, '=');
        $result = $query->execute();

        foreach ($result['commerce_order'] as $order_id => $order) {
          $order = commerce_order_load($order_id);
          $return[] = array(
            'path' => 'admin/commerce/orders/' . $order_id,
            'title' => "Vis ordre " . $order_id . " datert " . format_date($order->created, 'custom', 'd-m-Y'),
          );
          $return[] = array(
            'path' => 'admin/commerce/orders/' . $order_id . "/edit",
            'title' => "Endre ordre " . $order_id . " datert " . format_date($order->created, 'custom', 'd-m-Y'),
          );
        }
      }
    }



    if (isset($return)) {
      return $return;
    }
  }
}